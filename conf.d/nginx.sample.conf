# I go in your nginx configs directory
# Likely either /usr/local/nginx/conf/
# /etc/nginx/
# /usr/local/etc/nginx/
# usually conf.d (look in the default nginx.conf file and you'll see an include matching all conf files in a directory
# that's your config directory /etc/nginx/conf.d/*.conf )

# This is a server definition block
server {
  listen 80; # Listen to requests on port 80
  listen 81;
  # respond to requests on port 80/81 to this host name
  server_name www.myfirsttotallyawesomeapp.com;

  # for all locations
  location / {
    # show the content at this location
    proxy_pass http://127.0.0.1:3456;
  }
}

server {
  listen 80;
  server_name www.mysecondtotallyawesomeapp.com;

  location / {
    proxy_pass http://127.0.0.1:4567;
  }
}

# route the traffic depending on the path
# note how there is nothing matching / here
# what would happen to traffic going to /?
server {
  listen 80;
  # server_name can match wildcards of *.something
  # it can also be a regular expression
  server_name *.bothofmytotallyawesomeapps.com;

  location /1 {
    proxy_pass http://127.0.0.1:3456;
  }

  location /2 {
    proxy_pass http://127.0.0.1:4567;
  }

  location ~(reactjs).* {
    proxy_pass http://127.0.0.1:4567;
  }
}

server {
  listen 80;
  server_name www.totallynotshadyapp.com;

  # Note that we can rewrite headers on the way out
  location /shady {
    proxy_pass http://127.0.0.1:5678;
    proxy_set_header  Host www.maybe-a-little-shady.com;
  }

  location / {
    proxy_pass http://127.0.0.1:5678;
    proxy_set_header  Host $host;
  }
}

# static file handling with gzip on
server {
  listen 80;
  server_name www.igzip.com;

  gzip on;
  # Where should the system look for content?
  root /www/nginxIntro;
}

# static file handling with gzip off
server {
  listen 80;
  server_name www.idontgzip.com;

  gzip off;
  root /www/nginxIntro;
}

